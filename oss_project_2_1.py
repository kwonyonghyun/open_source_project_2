# -*- coding: utf-8 -*-
"""oss_project_2-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hTlrmJN6pS5fUTx0kje3ch-hN-QjcSEC
"""

import pandas as pd

file_path = '2019_kbo_for_kaggle_v2.csv'

df = pd.read_csv(file_path)

df_2015 = df[df['year'] == 2015]
df_2016 = df[df['year'] == 2016]
df_2017 = df[df['year'] == 2017]
df_2018 = df[df['year'] == 2018]
df_2019 = df[df['year'] == 2019]  # 년도에 따라 데이터 프레임 추출

# 'batter_name', 'TB',   'GB',  'BU', 'year','salary',  'year_born', 'hand2', 'cp', 'tp', '1B', 'FBP', 'avg', 'OBP', 'SLG', 'OPS', 'p_year', 'YAB', 'YOPS'

df_2015_sort_hits = df_2015.sort_values(by='H', ascending=False)  # 2015~2018년도 각 년도에 안타수가 가장 많았던 10명의 선수 이름
print(df_2015_sort_hits.head(10)['batter_name'])
df_2016_sort_hits = df_2016.sort_values(by='H', ascending=False)
print(df_2016_sort_hits.head(10)['batter_name'])
df_2017_sort_hits = df_2017.sort_values(by='H', ascending=False)
print(df_2017_sort_hits.head(10)['batter_name'])
df_2018_sort_hits = df_2018.sort_values(by='H', ascending=False)
print(df_2018_sort_hits.head(10)['batter_name'])

df_2015_sort_batting_avg = df_2015.sort_values(by='avg', ascending=False)  # 2015~2018년도 각 년도에 타율이 가장 높았던 10명의 선수 이름
print(df_2015_sort_batting_avg.head(10)['batter_name'])
df_2016_sort_batting_avg = df_2016.sort_values(by='avg', ascending=False)
print(df_2016_sort_batting_avg.head(10)['batter_name'])
df_2017_sort_batting_avg = df_2017.sort_values(by='avg', ascending=False)
print(df_2017_sort_batting_avg.head(10)['batter_name'])
df_2018_sort_batting_avg = df_2018.sort_values(by='avg', ascending=False)
print(df_2018_sort_batting_avg.head(10)['batter_name'])

df_2015_sort_homerun = df_2015.sort_values(by='HR', ascending=False)  # 2015~2018년도 각 년도에 홈런수가 가장 많았던 10명의 선수 이름
print(df_2015_sort_homerun.head(10)['batter_name'])
df_2016_sort_homerun = df_2016.sort_values(by='HR', ascending=False)
print(df_2016_sort_homerun.head(10)['batter_name'])
df_2017_sort_homerun = df_2017.sort_values(by='HR', ascending=False)
print(df_2017_sort_homerun.head(10)['batter_name'])
df_2018_sort_homerun = df_2018.sort_values(by='HR', ascending=False)
print(df_2018_sort_homerun.head(10)['batter_name'])

df_2015_sort_onbase_percentage = df_2015.sort_values(by='OBP', ascending=False)  # 2015~2018년도 각 년도에 출루율이 가장 높았던 10명의 선수 이름
print(df_2015_sort_onbase_percentage.head(10)['batter_name'])
df_2016_sort_onbase_percentage = df_2016.sort_values(by='OBP', ascending=False)
print(df_2016_sort_onbase_percentage.head(10)['batter_name'])
df_2017_sort_onbase_percentage = df_2017.sort_values(by='OBP', ascending=False)
print(df_2017_sort_onbase_percentage.head(10)['batter_name'])
df_2018_sort_onbase_percentage = df_2018.sort_values(by='OBP', ascending=False)
print(df_2017_sort_onbase_percentage.head(10)['batter_name'])

df_2018_sorted_war = df_2018.sort_values(by='war', ascending=False) # 각 포지션별로 승리 기여도가 높은 선수들의 이름 출력
index_포수 = df_2018_sorted_war[df_2018_sorted_war['cp'] == '포수']
print(index_포수.head(1)['batter_name'])
index_1루수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '1루수')]
print(index_1루수.head(1)['batter_name'])
index_2루수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '2루수')]
print(index_2루수.head(1)['batter_name'])
index_3루수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '3루수')]
print(index_3루수.head(1)['batter_name'])
index_유격수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '유격수')]
print(index_유격수.head(1)['batter_name'])
index_좌익수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '좌익수')]
print(index_좌익수.head(1)['batter_name'])
index_중견수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '중견수')]
print(index_중견수.head(1)['batter_name'])
index_우익수 = df_2018_sorted_war[(df_2018_sorted_war['cp'] == '우익수')]
print(index_우익수.head(1)['batter_name'])


corr_matrix = df.corr(numeric_only=True)
salary_corr = corr_matrix['salary'].drop('salary')
most_correlated = salary_corr.idxmax()
print(most_correlated)
